name: Printful Sync
on:
  schedule: [{ cron: "0 6 * * *" }] # daily 06:00 UTC
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    env:
      API_URL: https://studiorich-api.vercel.app/api/printful
      PRINTFUL_STORE_ID: ${{ secrets.PRINTFUL_STORE_ID }} # set this in repo secrets
      PRINTFUL_KEY: ${{ secrets.PRINTFUL_KEY }} # set this in repo secrets
    steps:
      - uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Fetch products (API first, Printful fallback)
        shell: bash
        run: |
          set -e
          mkdir -p _data assets/data

          echo "→ Trying StudioRich API…"
          if curl -fsS "$API_URL/products" -o /tmp/products.json; then
            echo "✓ API responded"
          else
            echo "✗ API failed — falling back to Printful /sync/products"
            curl -fsS "https://api.printful.com/sync/products" \
              -H "Authorization: Bearer ${PRINTFUL_KEY}" \
              -H "X-PF-Store-Id: ${PRINTFUL_STORE_ID}" \
              -o /tmp/products-full.json
            # flatten to array
            jq '.result // []' /tmp/products-full.json > /tmp/products.json
          fi

          # Ensure it’s an array; if the API returned {error:…}, coerce to []
          if jq -e 'type=="array"' /tmp/products.json >/dev/null 2>&1; then
            echo "✓ Valid product array"
          else
            echo "⚠ Non-array response; coercing to []"
            echo "[]" > /tmp/products.json
          fi

          # Write both SEO and client fallback files
          cp /tmp/products.json _data/printful.json
          cp /tmp/products.json assets/data/printful.json

      - name: Commit
        run: |
          git config user.name "printful-bot"
          git config user.email "printful-bot@users.noreply.github.com"
          git add _data/printful.json assets/data/printful.json
          git commit -m "chore: nightly Printful sync" || echo "No changes"
          git push
